name: pypi

on:
  push:
    branches:
      - master
      - build_wheels  # TODO remove
      - 'test_pypi*'
    tags-ignore:
      - '**'
  release:
    types: [published]

concurrency:
  group: pypi-${{ github.event_name }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      # Disable building PyPy wheels on windows (failed before)
      CIBW_BUILD: cp39-*  # TODO remove
      CIBW_SKIP: pp38-win* *-musllinux* *-win32 *-manylinux_i686  # TODO
      CIBW_ENVIRONMENT: OBSPY_NODE_NAME='wheel-builder'
      CIBW_TEST_COMMAND: obspy-runtests --report
      CIBW_TEST_EXTRAS: tests
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Adapt environment variables to build only some wheels
        if: github.ref_name == 'master' && github.event_name == 'push'
        shell: bash -l {0}
        run: |
          echo "CIBW_SKIP=pp38-win* *-musllinux* *-win32 *-manylinux_i686" >> "$GITHUB_ENV"
          echo "CIBW_BUILD=cp39-*" >> "$GITHUB_ENV"

      - name: Print environment variables
        shell: bash -l {0}
        run: |
          echo "CIBW_SKIP: $CIBW_SKIP"
          echo "CIBW_BUILD: $CIBW_BUILD"
          echo "CIBW_TEST_COMMAND: $CIBW_TEST_COMMAND"

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.1

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  # upload_test:
  #   needs: [build_wheels, build_sdist]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: artifact
  #         path: dist

  #     - uses: pypa/gh-action-pypi-publish@v1.5.0
  #       with:
  #         user: __token__
  #         password: ${{ secrets.testpypi_password }}
  #         repository_url: https://test.pypi.org/legacy/

  # upload:
  #   if: github.event_name == 'release'
  #   needs: [build_wheels, build_sdist, upload_test]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: artifact
  #         path: dist

  #     - uses: pypa/gh-action-pypi-publish@v1.5.0
  #       with:
  #         user: __token__
  #         password: ${{ secrets.pypi_password }}
